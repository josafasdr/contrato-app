[{"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/index.tsx":"1","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/reportWebVitals.ts":"2","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/App/App.tsx":"3","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/Home.tsx":"4","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/Header.tsx":"5","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/SideMenu.tsx":"6","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/contrato/index.tsx":"7","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/index.tsx":"8","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/EmpresaEdit.tsx":"9","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/EmpresaList.tsx":"10","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/contrato/ContratoForm.tsx":"11","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/contrato/ContratoList.tsx":"12","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/hooks/useService.ts":"13","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/EmpresaForm.tsx":"14","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/telefone/TelefoneForm.tsx":"15","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/contrato/ContratoEdit.tsx":"16","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/telefone/TelefoneList.tsx":"17","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/endereco/EnderecoForm.tsx":"18","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/telefone/TelefoneDialog.tsx":"19","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/aditivo/AditivoList.tsx":"20","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/aditivo/AditivoDialog.tsx":"21","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/aditivo/AditivoForm.tsx":"22","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/conta/ContaList.tsx":"23","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/conta/ContaDialog.tsx":"24","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/conta/ContaForm.tsx":"25","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/pagamento/PagamentoList.tsx":"26","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/pagamento/PagamentoDialog.tsx":"27","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/pagamento/PagamentoForm.tsx":"28","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/services/contratoService.tsx":"29","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/EmpresaDeleteDialog.tsx":"30","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/relatorios/index.ts":"31","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/relatorios/RelatorioPagamento.tsx":"32","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/TabPanel.tsx":"33","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/relatorios/RelatorioContratos.tsx":"34","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/relatorios/RelatorioAditivos.tsx":"35"},{"size":461,"mtime":1608256467998,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1608256468241,"results":"38","hashOfConfig":"37"},{"size":1351,"mtime":1608256467891,"results":"39","hashOfConfig":"37"},{"size":1487,"mtime":1608723697779,"results":"40","hashOfConfig":"37"},{"size":1594,"mtime":1608256467945,"results":"41","hashOfConfig":"37"},{"size":4131,"mtime":1608256467945,"results":"42","hashOfConfig":"37"},{"size":556,"mtime":1608432585020,"results":"43","hashOfConfig":"37"},{"size":954,"mtime":1608689750098,"results":"44","hashOfConfig":"37"},{"size":3591,"mtime":1608689750064,"results":"45","hashOfConfig":"37"},{"size":4872,"mtime":1608689750098,"results":"46","hashOfConfig":"37"},{"size":6000,"mtime":1608667520835,"results":"47","hashOfConfig":"37"},{"size":4505,"mtime":1608667486002,"results":"48","hashOfConfig":"37"},{"size":703,"mtime":1608256467998,"results":"49","hashOfConfig":"37"},{"size":1955,"mtime":1608689750098,"results":"50","hashOfConfig":"37"},{"size":1635,"mtime":1608475086267,"results":"51","hashOfConfig":"37"},{"size":3295,"mtime":1608667893010,"results":"52","hashOfConfig":"37"},{"size":3948,"mtime":1608689750204,"results":"53","hashOfConfig":"37"},{"size":2275,"mtime":1608689750114,"results":"54","hashOfConfig":"37"},{"size":1917,"mtime":1608689750204,"results":"55","hashOfConfig":"37"},{"size":3822,"mtime":1608523491181,"results":"56","hashOfConfig":"37"},{"size":1543,"mtime":1608476928730,"results":"57","hashOfConfig":"37"},{"size":2532,"mtime":1608485004526,"results":"58","hashOfConfig":"37"},{"size":4112,"mtime":1608687161245,"results":"59","hashOfConfig":"37"},{"size":3572,"mtime":1608687623226,"results":"60","hashOfConfig":"37"},{"size":4602,"mtime":1608685827766,"results":"61","hashOfConfig":"37"},{"size":4135,"mtime":1608689458766,"results":"62","hashOfConfig":"37"},{"size":2578,"mtime":1608689313590,"results":"63","hashOfConfig":"37"},{"size":2518,"mtime":1608522776498,"results":"64","hashOfConfig":"37"},{"size":957,"mtime":1608667861474,"results":"65","hashOfConfig":"37"},{"size":1475,"mtime":1608689750031,"results":"66","hashOfConfig":"37"},{"size":36,"mtime":1608689749968,"results":"67","hashOfConfig":"37"},{"size":1032,"mtime":1608722522796,"results":"68","hashOfConfig":"37"},{"size":586,"mtime":1608723931365,"results":"69","hashOfConfig":"37"},{"size":1925,"mtime":1608723965998,"results":"70","hashOfConfig":"37"},{"size":1924,"mtime":1608723992278,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1qwzvgz",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/index.tsx",[],["149","150"],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/reportWebVitals.ts",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/App/App.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/Home.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/Header.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/SideMenu.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/contrato/index.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/index.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/EmpresaEdit.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/EmpresaList.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/contrato/ContratoForm.tsx",["151","152","153"],"import { FormControl, Input, InputLabel, makeStyles, MenuItem, OutlinedInput, Select, TextField } from '@material-ui/core'\nimport { useContext } from 'react'\nimport clsx from 'clsx'\n\nimport { ContratoContext } from '.'\nimport useService from '../../hooks/useService'\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('sm')]: {\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    }\n  },\n\n  margin: {\n    margin: theme.spacing(1),\n  },\n\n  grid: {\n    width: '100%'\n  },\n\n  textField: {\n    marginTop: '30px',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: '10px'\n    }\n  },\n\n  flexGrow1: {\n    flexGrow: 1\n  }\n}))\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nconst ContratoForm = () => {\n  const classes = useStyles()\n  const  {contrato, setContrato} = useContext(ContratoContext)\n  const { loading, data, error } = useService({\n    url: `${process.env.REACT_APP_PATH_API}/empresas`,\n    method: 'GET'\n  })\n\n  const tiposContrato = [\n    {value: 1, texto: \"Licitatório\"},\n    {value: 2, texto: \"Permanente\"},\n    {value: 3, texto: \"Consultoria\"}\n  ]\n\n  const prestacoes = [\n    {value: 1, texto: \"Serviço\"},\n    {value: 2, texto: \"Produto\"}\n  ]\n\n  const tiposStatusContrato = [\n    {value: 1, texto: \"Ativo\"},\n    {value: 2, texto: \"Finalizado\"},\n    {value: 3, texto: \"Cancelado\"}\n  ]\n\n  const handleChange = (event: any) => {\n    const { name, value } = event.target;\n    setContrato({\n      ...contrato,\n      [name]: value\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"empresa-label\">Empresa</InputLabel>\n        <Select \n          labelId=\"empresa-label\"\n          id=\"empresa\"\n          name=\"_idEmpresa\"\n          value={contrato?._idEmpresa || 0}\n          input={<Input />}\n          MenuProps={MenuProps}\n          onChange={handleChange}>\n            {data.map((empresa:any) => (\n              <MenuItem key={empresa._id} value={empresa._id}>\n                {empresa.razaoSocial}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n      <TextField\n        className={clsx(classes.textField, classes.flexGrow1)}\n        label=\"Número\"\n        name=\"numero\"\n        value={contrato?.numero || ''}\n        onChange={handleChange}\n      />  \n\n      <TextField\n        className={clsx(classes.textField, classes.flexGrow1)}\n        label=\"Cópia do Contrato\"\n        name=\"copiaContrato\"\n        value={contrato?.copiaContrato || ''}\n        onChange={handleChange}\n      />\n\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"tipo-contrato-label\">Tipo de Contrato</InputLabel>\n        <Select \n          labelId=\"tipo-contrato-label\"\n          id=\"tipoContrato\"\n          name=\"tipoContrato\"\n          value={contrato?.tipoContrato || 0}\n          input={<Input />}\n          MenuProps={MenuProps}\n          onChange={handleChange}>\n            {tiposContrato.map((tipoContrato:any) => (\n              <MenuItem key={tipoContrato.value} value={tipoContrato.value}>\n                {tipoContrato.texto}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n      \n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"prestacao-label\">Prestação</InputLabel>\n        <Select \n          labelId=\"prestacao-label\"\n          id=\"prestacao\"\n          name=\"prestacao\"\n          value={contrato?.prestacao || 0}\n          input={<Input />}\n          MenuProps={MenuProps}\n          onChange={handleChange}>\n            {prestacoes.map((prestacao:any) => (\n              <MenuItem key={prestacao.value} value={prestacao.value}>\n                {prestacao.texto}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n  \n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"status-contrato-label\">Status de Contrato</InputLabel>\n        <Select \n          labelId=\"status-contrato-label\"\n          id=\"statusContrato\"\n          name=\"statusContrato\"\n          value={contrato?.statusContrato || 0}\n          input={<Input />}\n          MenuProps={MenuProps}\n          onChange={handleChange}>\n            {tiposStatusContrato.map((statusContrato:any) => (\n              <MenuItem key={statusContrato.value} value={statusContrato.value}>\n                {statusContrato.texto}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n\n      <TextField\n        className={classes.textField}\n        type=\"number\"\n        label=\"Valor\"\n        name=\"valorContrato\"\n        value={contrato?.valorContrato || ''}\n        onChange={handleChange}\n      />\n\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"data-celebracao-label\">Data de Celebração</InputLabel>\n        <TextField\n          id=\"data-celebracao-label\"\n          className={classes.textField}\n          type=\"date\"\n          name=\"dataCelebracaoContrato\"\n          value={contrato?.dataCelebracaoContrato || ''}\n          onChange={handleChange}\n        />\n      </FormControl>\n\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"data-finalizacao-label\">Data de Finalização</InputLabel>\n        <TextField\n          className={classes.textField}\n          type=\"date\"\n          name=\"dataFinalizacaoContrato\"\n          value={contrato?.dataFinalizacaoContrato || ''}\n          onChange={handleChange}\n        />\n      </FormControl>\n\n      <TextField\n        className={classes.textField}\n        label=\"Observações\"\n        name=\"observacoesContrato\"\n        value={contrato?.observacoesContrato || ''}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\nexport default ContratoForm","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/contrato/ContratoList.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/hooks/useService.ts",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/EmpresaForm.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/telefone/TelefoneForm.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/contrato/ContratoEdit.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/telefone/TelefoneList.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/endereco/EnderecoForm.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/telefone/TelefoneDialog.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/aditivo/AditivoList.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/aditivo/AditivoDialog.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/aditivo/AditivoForm.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/conta/ContaList.tsx",["154"],"import { createContext, useContext, useState } from 'react'\nimport {\n  makeStyles,\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableSortLabel,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport ContaDialog from './ContaDialog'\nimport { ContratoContext } from '../contrato';\nimport * as contratoService from '../../services/contratoService';\n\nconst columns = [\n  { id: 'valorConta', label: 'Valor do conta' },\n  { id: 'dataRecebimento', label: 'Data de recebimento' },\n  { id: 'dataVencimento', label: 'Data de vencimento' },\n  { id: 'edit', label: '' },\n  { id: 'delete', label: '' }\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n\n  button: {\n    margin: '10px 0 10px 0',\n    textTransform: 'none'\n  },\n\n  container: {\n    width: '50%',\n    minWidth: '200px'\n  },\n\n  editLink: {\n    color: 'inherit'\n  }\n})\n\nexport const ContaContext = createContext<any | null>({})\n\nconst ContaList = () => {\n  const classes = useStyles()\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [recordForEdit, setRecordForEdit] = useState(null)\n  const { contrato, setContrato } = useContext(ContratoContext)\n\n  const handleOpenDialog = (item:any) => {\n    setRecordForEdit(item);\n    setDialogOpen(true)\n  }\n\n  const handleExclude = (item: any) => {\n    const index = contrato.contas.indexOf(item);\n    if (index > -1) {\n      contrato.contas.splice(index, 1);\n    }\n\n    contratoService.update(contrato, contrato._id);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        onClick={() =>{handleOpenDialog({})}}\n      >\n        Inserir Conta\n      </Button>\n\n      <ContaContext.Provider value={{dialogOpen, setDialogOpen}}>\n        <ContaDialog recordForEdit={recordForEdit} />\n\n        <Paper className={classes.root}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader={true} aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map((column: any) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ backgroundColor: '#f5f5f5' }}\n                    >\n                      {column.label}\n                      <TableSortLabel />\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              {contrato?.contas && <TableBody>\n                {contrato?.contas.map((row: any) => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={`${row._id}`}>\n                      <TableCell>{row.valorConta}</TableCell>\n                      <TableCell>{(row.dataRecebimentoSetor ? row.dataRecebimentoSetor.substring(0, 10) : '')}</TableCell>\n                      <TableCell>{(row.dataVencimentoConta ? row.dataVencimentoConta.substring(0, 10) : '')}</TableCell>\n                      <TableCell>\n                        <Button\n                          className={classes.button}\n                          size=\"small\"\n                          onClick={() => {handleOpenDialog(row)}}\n                        >\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                      <TableCell>\n                        <form onSubmit={ () => {handleExclude(row)}}>\n                          <input type=\"hidden\" name=\"conta\" value={row} />\n                          <Button type=\"submit\" className={classes.editLink}>\n                            <DeleteIcon />\n                          </Button>\n                        </form>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>}\n            </Table>\n          </TableContainer>\n        </Paper>\n      </ContaContext.Provider>\n    </div>\n  )\n}\n\nexport default ContaList","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/conta/ContaDialog.tsx",["155"],"import { useContext, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { ContratoContext } from '../contrato'\nimport ContaForm from './ContaForm'\nimport { ContaContext } from './ContaList'\nimport { Box, makeStyles } from '@material-ui/core'\nimport PagamentoList from '../pagamento/PagamentoList'\nimport * as contratoService from '../../services/contratoService';\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n      borderStyle: 'none',\n      marginTop: '5px'\n    },\n  \n    legend: {\n      fontWeight: 'bold',\n      fontSize: 'medium'\n    },\n  \n    buttons: {\n      marginTop: '10px'\n    },\n  \n    button: {\n      textTransform: 'none',\n      [theme.breakpoints.up('sm')]: {\n        marginRight: '10px'\n      }\n    }\n}))\n  \nconst ContaDialog = (props:any) => {\n\n  if(props.recordForEdit){\n    if(props.recordForEdit.dataVencimentoConta)\n      props.recordForEdit.dataVencimentoConta = props.recordForEdit.dataVencimentoConta.substring(0, 10);\n    if(props.recordForEdit.dataRecebimentoSetor)  \n      props.recordForEdit.dataRecebimentoSetor = props.recordForEdit.dataRecebimentoSetor.substring(0, 10);\n  }\n\n  console.log('contadialog props.recordForEdit - ', props.recordForEdit)\n\n  const classes = useStyles()\n  const { contrato, setContrato } = useContext(ContratoContext)\n  const [conta, setConta] = useState({...props.recordForEdit})\n  const { dialogOpen, setDialogOpen } = useContext(ContaContext)\n\n  const handleClose = () => {\n    setDialogOpen(false)\n  }\n\n  const handleChange = (data: any) => {\n    setConta(data)\n  }\n\n  const handleInsert = () => {\n\n    if(contrato.contas)\n      contrato.contas.push(conta);\n    else{\n      contrato.contas = [conta];\n    }\n\n    contratoService.update(contrato, contrato._id)\n      .then((response) => {\n        setDialogOpen(false)\n      }).catch((err) => {\n        console.log(err)\n    })\n\n  }\n\n  const handleEdit = () => {\n    for(let contaContrato of contrato.contas){\n      if(contaContrato._id == conta._id){\n        const index = contrato.contas.indexOf(contaContrato);\n        if (index > -1) {\n          contrato.contas.splice(index, 1);\n        }\n        contrato.contas = [...contrato.contas, conta];\n      }\n    }\n    setContrato({\n      ...contrato,\n      contas: [...contrato.contas]\n    })\n    \n    contratoService.update(contrato, contrato._id)\n      .then((response) => {\n        setDialogOpen(false)\n      }).catch((err) => {\n        console.log(err)\n    })\n    \n  }\n\n  return (\n    <div>\n      <Dialog open={dialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Inserir Conta</DialogTitle>\n        <DialogContent>\n          <ContaForm recordForEdit={props.recordForEdit} onChange={handleChange} />\n          <Box className={classes.box} component=\"fieldset\">\n            <legend className={classes.legend}>Contas</legend>\n            <PagamentoList conta={props.recordForEdit} />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button onClick={(props.recordForEdit && props.recordForEdit._id ? handleEdit : handleInsert)} color=\"primary\">\n            Salvar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default ContaDialog","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/conta/ContaForm.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/pagamento/PagamentoList.tsx",["156","157","158","159","160"],"import { createContext, useContext, useState } from 'react'\nimport {\n  makeStyles,\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableSortLabel,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport PagamentoDialog from './PagamentoDialog'\nimport { ContaContext } from '../conta/ContaList';\nimport { ContratoContext } from '../contrato';\nimport * as contratoService from '../../services/contratoService';\n\nconst columns = [\n  { id: 'dataPagamentoConta', label: 'Data do Pagamento' },\n  { id: 'valorPago', label: 'Valor Pago' },\n  { id: 'taxaJuros', label: 'Taxa de Juros' },\n  { id: 'delete', label: '' }\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n\n  button: {\n    margin: '10px 0 10px 0',\n    textTransform: 'none'\n  },\n\n  container: {\n    width: '50%',\n    minWidth: '200px'\n  },\n\n  editLink: {\n    color: 'inherit'\n  }\n})\n\nexport const PagamentoContext = createContext<any | null>({})\n\nconst PagamentoList = (props:any) => {\n\n  console.log('pagamentolist props = ', props)\n\n  const classes = useStyles()\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [recordForEdit, setRecordForEdit] = useState(null)\n  const [conta, setConta] = useState({...props.conta});\n  const { contrato, setContrato } = useContext(ContratoContext)\n\n  const handleOpenDialog = (item:any) => {\n    setRecordForEdit(item);\n    setDialogOpen(true)\n  }\n\n  const handleExclude = (item: any) => {\n\n    for(let contaContrato of contrato.contas){\n      console.log('contaContrato._id = ', contaContrato._id)\n      console.log('conta._id = ', conta._id)\n      if(contaContrato._id === conta._id){\n        const index = contaContrato.pagamentos.indexOf(item);\n        if (index > -1) {\n          contaContrato.pagamentos.splice(index, 1);\n        }\n    \n      }\n    }\n\n    contratoService.update(contrato, contrato._id);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        onClick={() =>{handleOpenDialog({})}}\n      >\n        Inserir Pagamento\n      </Button>\n\n      <PagamentoContext.Provider value={{dialogOpen, setDialogOpen}}>\n        <PagamentoDialog recordForEdit={props.conta} />\n\n        <Paper className={classes.root}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader={true} aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map((column: any) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ backgroundColor: '#f5f5f5' }}\n                    >\n                      {column.label}\n                      <TableSortLabel />\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              {conta?.pagamentos && <TableBody>\n                {conta?.pagamentos.map((row: any) => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={`${row.dataPagamentoConta}-${row.valorPago}`}>\n                      <TableCell>{(row.dataPagamentoConta ? row.dataPagamentoConta.substring(0, 10) : '')}</TableCell>\n                      <TableCell>{row.valorPago}</TableCell>\n                      <TableCell>{row.taxaJuros}</TableCell>\n                      <TableCell>\n                          <form onSubmit={ () => {handleExclude(row)}}>\n                          <input type=\"hidden\" name=\"pagamento\" value={row} />\n                          <Button type=\"submit\" className={classes.editLink}>\n                            <DeleteIcon />\n                          </Button>\n                        </form>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>}\n            </Table>\n          </TableContainer>\n        </Paper>\n      </PagamentoContext.Provider>\n    </div>\n  )\n}\n\nexport default PagamentoList","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/pagamento/PagamentoDialog.tsx",["161","162","163"],"import { useContext, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { ContaContext } from '../conta/ContaList'\nimport PagamentoForm from './PagamentoForm'\nimport { PagamentoContext } from './PagamentoList'\nimport * as contratoService from '../../services/contratoService';\nimport { ContratoContext } from '../contrato'\n\nconst PagamentoDialog = (props:any) => {\n\n  console.log('props = ', props)\n\n  if(props.recordForEdit){\n    if(props.recordForEdit.dataPagamentoConta)\n      props.recordForEdit.dataPagamentoConta = props.recordForEdit.dataPagamentoConta.substring(0, 10);\n  }\n\n  const { contrato, setContrato } = useContext(ContratoContext)\n  const [conta, setConta] = useState(props.recordForEdit)\n  const [pagamento, setPagamento] = useState({ _id:0})\n  const { dialogOpen, setDialogOpen } = useContext(PagamentoContext)\n\n  console.log('contrato = ', contrato)\n  console.log('conta = ', conta)\n\n  const handleClose = () => {\n    setDialogOpen(false)\n  }\n\n  const handleChange = (data: any) => {\n    setPagamento(data)\n  }\n\n  const handleInsert = () => {\n\n    console.log('handleinsert pagamento = ', contrato)\n\n    for(let contaContrato of contrato.contas){\n      console.log('contaContrato._id = ', contaContrato._id)\n      console.log('conta._id = ', conta._id)\n      if(contaContrato._id === conta._id){\n        if(contaContrato.pagamentos)\n          contaContrato.pagamentos.push(pagamento);\n        else{\n          contaContrato.pagamentos = [pagamento];\n        }\n    \n      }\n    }\n\n    console.log('final handleinsert pagamento = ', contrato)\n    contratoService.update(contrato, contrato._id)\n      .then((response) => {\n        setDialogOpen(false)\n      }).catch((err) => {\n        console.log(err)\n    })\n\n  }\n\n\n  return (\n    <div>\n      <Dialog open={dialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Inserir Pagamento</DialogTitle>\n        <DialogContent>\n          <PagamentoForm onChange={handleChange} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button onClick={handleInsert} color=\"primary\">\n            Salvar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default PagamentoDialog","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/pagamento/PagamentoForm.tsx",["164","165","166","167"],"import { useEffect, useState } from 'react'\nimport {\n    FormControl,\n    Input,\n    InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField\n} from '@material-ui/core'\n\nimport Pagamento from '../../model/Pagamento'\n//import { PagamentoContext } from './PagamentoList'\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n      \n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('sm')]: {\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    }\n  },\n\n  margin: {\n    margin: theme.spacing(1),\n  },\n\n  grid: {\n    width: '100%'\n  },\n\n  textField: {\n    marginTop: '50px',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: '10px'\n    }\n  },\n\n  flexGrow1: {\n    flexGrow: 1\n  }\n}))\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst PagamentoForm = (props: any) => {\n  const classes = useStyles()\n  const [pagamento, setPagamento] = useState<Pagamento>({ })\n  const [change, setChange] = useState(false)\n  //const { pagamentos, setPagamentos } = useContext(PagamentoContext)\n  \n\n  const handleChange = (event: any) => {\n    const { name, value } = event.target\n    setPagamento({\n      ...pagamento,\n      [name]: value\n    })\n    setChange(true)\n  }\n\n  useEffect(() => {\n    if (props.onChange && change) {\n      props.onChange(pagamento)\n    }\n    setChange(false)\n  }, [props, pagamento, change])\n\n  return (\n    <div className={classes.form}>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"data-pagamento-conta-label\">Data de Pagamento da Conta</InputLabel>\n        <TextField\n          id=\"data-pagamento-conta-label\"\n          className={classes.textField}\n          type=\"date\"\n          name=\"dataPagamentoConta\"\n          value={pagamento?.dataPagamentoConta || ''}\n          onChange={handleChange}\n        />\n      </FormControl>\n      \n      <TextField\n        className={classes.textField}\n        type=\"number\"\n        label=\"Valor\"\n        name=\"valorPago\"\n        value={pagamento?.valorPago || ''}\n        onChange={handleChange}\n      />\n\n      <TextField\n        className={classes.textField}\n        type=\"number\"\n        label=\"Taxa de Juros\"\n        name=\"taxaJuros\"\n        value={pagamento?.taxaJuros || ''}\n        onChange={handleChange}\n      />\n\n    </div>\n  )\n}\n\nexport default PagamentoForm","/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/services/contratoService.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/pages/empresa/EmpresaDeleteDialog.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/relatorios/index.ts",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/relatorios/RelatorioPagamento.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/TabPanel.tsx",[],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/relatorios/RelatorioContratos.tsx",["168","169","170","171"],"/home/dias1618/Documents/pos_graduacao/Programacao para Web II/contrato-app/src/components/relatorios/RelatorioAditivos.tsx",["172","173","174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":64,"nodeType":"182","messageId":"183","endLine":1,"endColumn":77},{"ruleId":"180","severity":1,"message":"184","line":58,"column":11,"nodeType":"182","messageId":"183","endLine":58,"endColumn":18},{"ruleId":"180","severity":1,"message":"185","line":58,"column":26,"nodeType":"182","messageId":"183","endLine":58,"endColumn":31},{"ruleId":"180","severity":1,"message":"186","line":55,"column":21,"nodeType":"182","messageId":"183","endLine":55,"endColumn":32},{"ruleId":"187","severity":1,"message":"188","line":81,"column":28,"nodeType":"189","messageId":"190","endLine":81,"endColumn":30},{"ruleId":"180","severity":1,"message":"191","line":15,"column":8,"nodeType":"182","messageId":"183","endLine":15,"endColumn":16},{"ruleId":"180","severity":1,"message":"192","line":18,"column":10,"nodeType":"182","messageId":"183","endLine":18,"endColumn":22},{"ruleId":"180","severity":1,"message":"193","line":57,"column":10,"nodeType":"182","messageId":"183","endLine":57,"endColumn":23},{"ruleId":"180","severity":1,"message":"194","line":58,"column":17,"nodeType":"182","messageId":"183","endLine":58,"endColumn":25},{"ruleId":"180","severity":1,"message":"186","line":59,"column":21,"nodeType":"182","messageId":"183","endLine":59,"endColumn":32},{"ruleId":"180","severity":1,"message":"192","line":8,"column":10,"nodeType":"182","messageId":"183","endLine":8,"endColumn":22},{"ruleId":"180","severity":1,"message":"186","line":23,"column":21,"nodeType":"182","messageId":"183","endLine":23,"endColumn":32},{"ruleId":"180","severity":1,"message":"194","line":24,"column":17,"nodeType":"182","messageId":"183","endLine":24,"endColumn":25},{"ruleId":"180","severity":1,"message":"195","line":4,"column":5,"nodeType":"182","messageId":"183","endLine":4,"endColumn":10},{"ruleId":"180","severity":1,"message":"196","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":11},{"ruleId":"180","severity":1,"message":"197","line":8,"column":3,"nodeType":"182","messageId":"183","endLine":8,"endColumn":9},{"ruleId":"180","severity":1,"message":"198","line":53,"column":7,"nodeType":"182","messageId":"183","endLine":53,"endColumn":16},{"ruleId":"180","severity":1,"message":"184","line":53,"column":13,"nodeType":"182","messageId":"183","endLine":53,"endColumn":20},{"ruleId":"180","severity":1,"message":"185","line":53,"column":28,"nodeType":"182","messageId":"183","endLine":53,"endColumn":33},{"ruleId":"180","severity":1,"message":"199","line":59,"column":15,"nodeType":"182","messageId":"183","endLine":59,"endColumn":19},{"ruleId":"180","severity":1,"message":"200","line":59,"column":21,"nodeType":"182","messageId":"183","endLine":59,"endColumn":26},{"ruleId":"180","severity":1,"message":"184","line":53,"column":13,"nodeType":"182","messageId":"183","endLine":53,"endColumn":20},{"ruleId":"180","severity":1,"message":"185","line":53,"column":28,"nodeType":"182","messageId":"183","endLine":53,"endColumn":33},{"ruleId":"180","severity":1,"message":"199","line":59,"column":15,"nodeType":"182","messageId":"183","endLine":59,"endColumn":19},{"ruleId":"180","severity":1,"message":"200","line":59,"column":21,"nodeType":"182","messageId":"183","endLine":59,"endColumn":26},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"@typescript-eslint/no-unused-vars","'OutlinedInput' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'setContrato' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'EditIcon' is defined but never used.","'ContaContext' is defined but never used.","'recordForEdit' is assigned a value but never used.","'setConta' is assigned a value but never used.","'Input' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'MenuProps' is assigned a value but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]